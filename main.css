/* 	!! Remember to place media queries around the module states not in any separate files !!
	#######################*/

/*	&& BASIC
	=======================*/	
	body {animation: fadeIn 1.5s linear 1s 1; -webkit-animation: fadeIn 1.5s linear 0s 1 alternate;}
	p {font-weight:300;}
	@media (min-width: 250px) {
		.logo {
			color: var(--yellow);

		}
	}
	@media (min-width: 420px) {
		.logo {

			
			
		}
	}
	@media (min-width: 750px) {
		.logo {

			
		}
	}
	.logo {
		font-size: 2.7em;
		font-weight:700;
		
	}
	.title h2 {
		margin-top:20px;
		padding-top:20px;
	}
	.slogan {
		line-height:30px;
		text-align:center;
	}

	.base {
		display:grid;
		justify-self: center;
		align-content: center;
		margin: 0 1em;
		padding: 2em 5em;

	}
	ul li {
		padding-left:30px;
		list-style-type: square;
		list-style-position: inside;
		line-height:1.6;
	}
	
	#first {
		font-size:calc(3.3em - var(--h1)); 
		border: 1px solid var(--codebox);background: var(--codebox);
	}
	#second {
		font-size:calc(2.9em - var(--h2)); 
		border: 1px solid var(--codebox);background: var(--codebox);
	}
	#third {
		font-size:calc(2.3em - var(--h3)); 
		border: 1px solid var(--codebox);background: var(--codebox);
	}
	#fourth {
		font-size:calc(2em - var(--h4)); 
		border: 1px solid var(--codebox);background: var(--codebox);
	}
	#fifth {
		font-size:calc(1.8em - var(--h5)); 
		border: 1px solid var(--codebox);background: var(--codebox);
	}
	#sixth {
		font-size:calc(1.5em - var(--h6)); 
		border: 1px solid var(--codebox);background: var(--codebox);
	}

/*	&& UTILITIES
	All the dirty fixes and helpful classes here.
	=======================*/	
	.u-full-width {
		width: 100%;}
	/* h1.fixxxs, h2.fixxxs, h3.fixxxs {line-height:0.7em;}
	h1.fixxxs > span, h2.fixxxs > span {  content: ""; clear: both; } */
	
	
/*	&& MOBILE FIRST
	The best way to keep your code well structured is to create the queries close 
	to the relevant codes.
	=======================*/
	/* Grid becomes active when larger than phone */
	@media (min-width: 420px) {}
	/* Grid becomes active when larger than phablet */
	@media (min-width: 550px) {}
	/* Grid becomes active when larger than tablet */
	@media (min-width: 750px) {}
	/* Grid becomes active when larger than desktop */
	@media (min-width: 1000px) {}
	/* Grid becomes active when larger than HD desktop */
	@media (min-width: 1200px) {}
/* Forms
–––––––––––––––––––––––––––––––––––––––––––––––––– */
input[type="email"],
input[type="number"],
input[type="search"],
input[type="text"],
input[type="tel"],
input[type="url"],
input[type="password"],
textarea,
select {
  height: 38px;
  padding: 6px 10px; /* The 6px vertically centers text on FF, ignored by Webkit */
  background-color: #fff;
  border: 1px solid #D1D1D1;
  border-radius: 4px;
  box-shadow: none;
  box-sizing: border-box; }
/* Removes awkward default styles on some inputs for iOS */
input[type="email"],
input[type="number"],
input[type="search"],
input[type="text"],
input[type="tel"],
input[type="url"],
input[type="password"],
textarea {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }
textarea {
  min-height: 65px;
  padding-top: 6px;
  padding-bottom: 6px; }
input[type="email"]:focus,
input[type="number"]:focus,
input[type="search"]:focus,
input[type="text"]:focus,
input[type="tel"]:focus,
input[type="url"]:focus,
input[type="password"]:focus,
textarea:focus,
select:focus {
  border: 1px solid #33C3F0;
  outline: 0; }
label,
legend {
  display: block;
  margin-bottom: .5rem;
  font-weight: 600; }
fieldset {
  padding: 0;
  border-width: 0; }
input[type="checkbox"],
input[type="radio"] {
  display: inline; }
label > .label-body {
  display: inline-block;
  margin-left: .5rem;
  font-weight: normal; }


	/* Tables
–––––––––––––––––––––––––––––––––––––––––––––––––– */
th {font-weight:700;}
th,
td {
  padding: 12px 15px;
  text-align: left;
  border-bottom: 1px solid #E1E1E1; }
th:first-child,
td:first-child {
  padding-left: 0; }
th:last-child,
td:last-child {
  padding-right: 0; }


ul.menu  {
    list-style-type: none;
	margin: 1px;
	padding:2.0em 0 2.5em;
	background: none;
	text-align: center;
	color: var(--white);
    text-transform: uppercase;
	letter-spacing: .1rem;
  }
ul.menu > li > a {color: var(--yellow);font-weight: 700;font-size: 1rem;text-decoration:none;}
ul.menu > li {
    display: inline;
    padding:1em;
}

ul.features {
	margin:0;
}

ul.features > li {
	list-style-type: none;
	padding:0 1em;
}




span.colorcycle {
	animation: colorchange 8s linear 1s infinite; /* animation-name followed by duration in seconds*/
	   /* you could also use milliseconds (ms) or something like 2.5s */
	-webkit-animation: colorchange 8s linear 0s infinite alternate; /* Chrome and Safari */
  }

  @keyframes colorchange
  {
	0%   {color:var(--white);}
	33%  {color: var(--greywhite);}
	66%  {color: var(--black);}
	80%  {color: var(--alink);}
	100% { color: var(--yellow);}
 }

  @-webkit-keyframes colorchange /* Safari and Chrome - necessary duplicate */
  {
	0%   {color:var(--white);}
	33%  {color: var(--greywhite);}
	66%  {color: var(--black);}
	80%  {color: var(--alink);}
	100% { color: var(--yellow);}
 }

#hidethis {
	display:none;
}

#displaythis {
	/* Do nothing */
	outline: 0;
}

.animatethis {animation: fadeIn 5s linear 1s infinite;-webkit-animation: fadeIn 5s linear 0s infinite alternate;}
.animatethis2 {animation: fadeIn 5s linear 1s infinite;-webkit-animation: fadeIn 5s linear 0s infinite alternate;}	
@keyframes fadeIn{0% {opacity:0;}100% {opacity:1;}}
@-webkit-keyframes fadeIn {0% {opacity:0;}100% {opacity:1;}}
	  
	  